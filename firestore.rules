rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {

    // 🔐 Users collection - allow user to read/write only their own data
    match /users/{userId} {
      allow read, write: if request.auth != null && request.auth.uid == userId;

      // Nested planHistory subcollection
      match /planHistory/{planId} {
        allow read, write: if request.auth != null && request.auth.uid == userId;
      }
    }

    // 🔐 Profiles - anyone logged in can read; only owners can write
    match /profiles/{profileId} {
      allow read: if request.auth != null;
      allow write: if request.auth != null && request.auth.uid == profileId;
    }

    // 🔐 Favorites - per-user access only
    match /favorites/{userId} {
      allow read, write: if request.auth != null && request.auth.uid == userId;
    }

    // 🔐 Notifications - user can read only their own; no write access
    match /notifications/{notificationId} {
      allow read: if request.auth != null &&
                     request.auth.uid == resource.data.userId;
      allow write: if false; // Only backend/cloud functions can write
    }

    // 🔐 System logs - no read/write from clients
    match /systemLogs/{logId} {
      allow read, write: if false;
    }

    // 🌍 Public: States collection - all users can read
    match /states/{stateId} {
      allow read: if request.auth != null;
      allow write: if false; // Prevent client write
    }

    // 🌍 Public: Districts collection - all users can read
    match /districts/{districtId} {
      allow read: if request.auth != null;
      allow write: if false; // Prevent client write
    }
  }
}
