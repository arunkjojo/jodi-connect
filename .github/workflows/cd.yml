name: 🚀 Deploy to Firebase (Production)

on:
  push:
    branches: [ main ]

jobs:
  deploy:
    name: Firebase Deployment
    runs-on: ubuntu-latest

    permissions:
      contents: write
      pull-requests: write

    steps:
      - name: ⬇️ Checkout repository
        uses: actions/checkout@v2

      - name: ⚙️ Setup Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '20'

      - name: 🧰 Setup pnpm
        uses: pnpm/action-setup@v2
        with:
          version: 9

      - name: 💾 Cache pnpm store
        uses: actions/cache@v3
        with:
          path: ~/.pnpm-store
          key: ${{ runner.os }}-pnpm-${{ hashFiles('pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-

      - name: 📦 Install dependencies
        run: pnpm install --frozen-lockfile

      - name: 🧹 Run linter
        run: pnpm run lint

      - name: 🛠️ Build for production
        run: pnpm run build:prod
        env:
          VITE_FIREBASE_API_KEY: ${{ secrets.VITE_FIREBASE_API_KEY }}
          VITE_FIREBASE_AUTH_DOMAIN: ${{ secrets.VITE_FIREBASE_AUTH_DOMAIN }}
          VITE_FIREBASE_PROJECT_ID: ${{ secrets.VITE_FIREBASE_PROJECT_ID }}
          VITE_FIREBASE_STORAGE_BUCKET: ${{ secrets.VITE_FIREBASE_STORAGE_BUCKET }}
          VITE_FIREBASE_MESSAGING_SENDER_ID: ${{ secrets.VITE_FIREBASE_MESSAGING_SENDER_ID }}
          VITE_FIREBASE_APP_ID: ${{ secrets.VITE_FIREBASE_APP_ID }}
          VITE_FIREBASE_MEASUREMENT_ID: ${{ secrets.VITE_FIREBASE_MEASUREMENT_ID }}

      - name: 🔧 Setup Firebase CLI
        run: |
          pnpm install -g firebase-tools

      - name: 📝 Create firebase.json
        run: |
          cat > firebase.json <<EOF
          {
            "hosting": {
              "public": "build/prod",
              "ignore": [
                "firebase.json",
                "**/.*",
                "**/node_modules/**"
              ],
              "rewrites": [
                { "source": "**", "destination": "/index.html" }
              ],
              "headers": [
                {
                  "source": "**/*.@(js|css)",
                  "headers": [
                    { "key": "Cache-Control", "value": "max-age=31536000" }
                  ]
                },
                {
                  "source": "**/*.@(png|jpg|jpeg|gif|svg|webp)",
                  "headers": [
                    { "key": "Cache-Control", "value": "max-age=31536000" }
                  ]
                }
              ]
            }
          }
          EOF

      - name: 🔐 Prepare Firebase credentials
        run: |
          echo '${{ secrets.VITE_FIREBASE_SERVICE_ACCOUNT }}' > firebase-service-account.json
          echo "GOOGLE_APPLICATION_CREDENTIALS=firebase-service-account.json" >> $GITHUB_ENV

      - name: 🚀 Deploy to Firebase
        run: |
          firebase deploy --only hosting \
            --project ${{ secrets.VITE_FIREBASE_PROJECT_ID }} \
            --token ${{ secrets.VITE_FIREBASE_TOKEN }}

      - name: 🔗 Output Deployment URL
        id: deploy_url
        run: |
          echo "url=https://${{ secrets.VITE_FIREBASE_PROJECT_ID }}.web.app" >> $GITHUB_OUTPUT

      - name: 🏷️ Create GitHub Release
        id: create_release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: v${{ github.run_number }}
          name: Production Release v${{ github.run_number }}
          body: |
            ## 🚀 Production Deployment

            **Deployed to**: [${{ steps.deploy_url.outputs.url }}](${{ steps.deploy_url.outputs.url }})  
            **Commit**: ${{ github.sha }}  
            **Build Number**: ${{ github.run_number }}  
            **Deployed At**: ${{ github.event.head_commit.timestamp }}

            ### Changes
            ${{ github.event.head_commit.message }}

            ### Deployment Info
            - Firebase Project: `${{ secrets.VITE_FIREBASE_PROJECT_ID }}`
            - Node Version: `20`
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: 💬 Comment on commit
        uses: actions/github-script@v7
        with:
          script: |
            const deployUrl = '${{ steps.deploy_url.outputs.url }}';
            const releaseUrl = '${{ steps.create_release.outputs.url }}';
            const commitSha = context.sha.substring(0, 7);

            const message = `## ✅ Production Deployment Successful

            🔗 [Visit Site](${deployUrl})  
            🏷️ [Release v${{ github.run_number }}](${releaseUrl})  
            🔢 Commit: ${commitSha}  
            ⏰ Time: ${new Date().toISOString()}`;

            github.rest.repos.createCommitComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              commit_sha: context.sha,
              body: message
            });

      - name: 🧹 Cleanup credentials
        run: rm -f firebase-service-account.json
